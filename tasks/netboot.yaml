---
# tasks file for netboot nodes
- name: netboot masters nodes
  shell: |
    orig_mac={{ item.macaddr }}
    pvm_mac=`echo ${orig_mac//:}`
    pvmcec={{ item.pvmcec }}
    pvmlpar={{ item.pvmlpar }}
    pvm_profile=`ssh -o StrictHostKeyChecking=no {{ pvm_hmc }} "lssyscfg -r lpar -m ${pvmcec} --filter lpar_names=${pvmlpar} -F curr_profile"`
    remote_cmd="lpar_netboot -i -D -f -t ent -m ${pvm_mac} -s auto -d auto -S {{ helper.ipaddr }} -C {{ item.ipaddr }} -G {{ dhcp.router }} ${pvmlpar} ${pvm_profile} ${pvmcec}"
    ssh -o StrictHostKeyChecking=no {{ pvm_hmc }} "${remote_cmd}"
  with_items: "{{ masters }}"
  register: masters_output

- name: Check if there is workers
  when: (workers is defined) and (workers|length > 0)
  block:
    - name: netboot worker nodes
      shell: |
        orig_mac={{ item.macaddr }}
        pvm_mac=`echo ${orig_mac//:}`
        pvmcec={{ item.pvmcec }}
        pvmlpar={{ item.pvmlpar }}
        pvm_profile=`ssh -o StrictHostKeyChecking=no {{ pvm_hmc }} "lssyscfg -r lpar -m ${pvmcec} --filter lpar_names=${pvmlpar} -F curr_profile"`
        remote_cmd="lpar_netboot -i -D -f -t ent -m ${pvm_mac} -s auto -d auto -S {{ helper.ipaddr }} -C {{ item.ipaddr }} -G {{ dhcp.router }} ${pvmlpar} ${pvm_profile} ${pvmcec}"
        ssh -o StrictHostKeyChecking=no {{ pvm_hmc }} "${remote_cmd}"
      with_items: "{{ workers }}"
      register: workers_output